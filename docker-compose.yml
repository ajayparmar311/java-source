version: '3.8'

services:
 
  jenkins-blueocean:
    image: myjenkins-blueocean:v5
    container_name: jenkins-blueocean
    user: root
    restart: on-failure
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins
    ports:
      - "8080:8080"
      - "50000:50000"

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    restart: unless-stopped
    volumes:
      - nexus-data:/nexus-data
    networks:
      - jenkins
    ports:
      - "8081:8081"

  ansible-controller:
    image: ansible-controller:v2
    container_name: ansible-controller
    privileged: true
    networks:
      - jenkins
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    tty: true
    stdin_open: true
  
  postgres:
    image: postgres:16
    container_name: sonarqube_postgres
    restart: always
    networks:
      - jenkins
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    restart: always
    depends_on:
      - postgres
    networks:
      - jenkins
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    ulimits:
      nofile:
        soft: 131072
        hard: 131072
      nproc: 8192

volumes:
  jenkins-data:
  jenkins-docker-certs:
  nexus-data:
  postgres_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  jenkins:

